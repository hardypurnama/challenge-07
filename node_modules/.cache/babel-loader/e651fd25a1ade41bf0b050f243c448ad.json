{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchMobil } from './CariAPI';\nexport const getMobil = createAsyncThunk('mobil/fetchMobil', async () => {\n  const response = await fetchMobil();\n  return response;\n});\nexport const mobilSlice = createSlice({\n  name: 'mobil',\n  initialState: {\n    data: [],\n    initData: [],\n    status: 'idle'\n  },\n  reducers: {\n    filterMobil: (state, action) => {\n      const filters = action.payload;\n      console.log(filters);\n      state.data = state.initData.filter(el => {\n        return Object.keys(filters).every(filter => {\n          if (filter === 'availableAt') {\n            const rentDate = new Date(filters[filter]);\n            const availableDate = new Date(el[filter]);\n            console.log(rentDate, availableDate);\n            return rentDate.getTime() >= availableDate.getTime();\n          }\n          if (filter === 'capacity') {\n            return el[filter] >= filters[filter];\n          }\n          return filters[filter] === el[filter];\n        });\n      });\n    },\n    sortMobil: (state, action) => {},\n    clearMobil: state => {\n      state.data = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMobil.pending, state => {\n      console.log('test');\n      state.status = 'loading';\n    }).addCase(getMobil.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.initData = action.payload;\n    });\n  }\n});\nexport const {\n  filterMobil,\n  sortMobil,\n  clearMobil\n} = mobilSlice.actions;\nexport const selectMobil = state => state.mobil.data;\nexport const selectInitMobil = state => state.mobil.initData;\nexport default mobilSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchMobil","getMobil","response","mobilSlice","name","initialState","data","initData","status","reducers","filterMobil","state","action","filters","payload","console","log","filter","el","Object","keys","every","rentDate","Date","availableDate","getTime","sortMobil","clearMobil","extraReducers","builder","addCase","pending","fulfilled","actions","selectMobil","mobil","selectInitMobil","reducer"],"sources":["E:/bjb/QA/2022/Pelatihan Univ/TW 3/Fullstack web/Chapter 7 Gold-start 24 Oktober 2022/Challenge/Challenge-07/src/pages/Cari/CariSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchMobil } from './CariAPI';\r\n\r\nexport const getMobil = createAsyncThunk('mobil/fetchMobil', async () => {\r\n  const response = await fetchMobil();\r\n  return response;\r\n});\r\n\r\nexport const mobilSlice = createSlice({\r\n  name: 'mobil',\r\n  initialState: {\r\n    data: [],\r\n    initData: [],\r\n    status: 'idle',\r\n  },\r\n  reducers: {\r\n    filterMobil: (state, action) => {\r\n      const filters = action.payload;\r\n      console.log(filters);\r\n      state.data = state.initData.filter((el) => {\r\n        return Object.keys(filters).every((filter) => {\r\n          if (filter === 'availableAt') {\r\n            const rentDate = new Date(filters[filter]);\r\n            const availableDate = new Date(el[filter]);\r\n            console.log(rentDate, availableDate);\r\n            return rentDate.getTime() >= availableDate.getTime();\r\n          }\r\n          if (filter === 'capacity') {\r\n            return el[filter] >= filters[filter];\r\n          }\r\n          return filters[filter] === el[filter];\r\n        });\r\n      });\r\n    },\r\n    sortMobil: (state, action) => {},\r\n    clearMobil: (state) => {\r\n      state.data = [];\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getMobil.pending, (state) => {\r\n        console.log('test');\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(getMobil.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.initData = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { filterMobil, sortMobil, clearMobil } = mobilSlice.actions;\r\nexport const selectMobil = (state) => state.mobil.data;\r\nexport const selectInitMobil = (state) => state.mobil.initData;\r\nexport default mobilSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AAEtC,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAMI,QAAQ,GAAG,MAAMF,UAAU,EAAE;EACnC,OAAOE,QAAQ;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBF,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACJ,QAAQ,CAACU,MAAM,CAAEC,EAAE,IAAK;QACzC,OAAOC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,KAAK,CAAEJ,MAAM,IAAK;UAC5C,IAAIA,MAAM,KAAK,aAAa,EAAE;YAC5B,MAAMK,QAAQ,GAAG,IAAIC,IAAI,CAACV,OAAO,CAACI,MAAM,CAAC,CAAC;YAC1C,MAAMO,aAAa,GAAG,IAAID,IAAI,CAACL,EAAE,CAACD,MAAM,CAAC,CAAC;YAC1CF,OAAO,CAACC,GAAG,CAACM,QAAQ,EAAEE,aAAa,CAAC;YACpC,OAAOF,QAAQ,CAACG,OAAO,EAAE,IAAID,aAAa,CAACC,OAAO,EAAE;UACtD;UACA,IAAIR,MAAM,KAAK,UAAU,EAAE;YACzB,OAAOC,EAAE,CAACD,MAAM,CAAC,IAAIJ,OAAO,CAACI,MAAM,CAAC;UACtC;UACA,OAAOJ,OAAO,CAACI,MAAM,CAAC,KAAKC,EAAE,CAACD,MAAM,CAAC;QACvC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACDS,SAAS,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;IAChCe,UAAU,EAAGhB,KAAK,IAAK;MACrBA,KAAK,CAACL,IAAI,GAAG,EAAE;IACjB;EACF,CAAC;EACDsB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC7B,QAAQ,CAAC8B,OAAO,EAAGpB,KAAK,IAAK;MACpCI,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBL,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDsB,OAAO,CAAC7B,QAAQ,CAAC+B,SAAS,EAAE,CAACrB,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACH,MAAM,GAAG,MAAM;MACrBG,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACE,OAAO;IACjC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,WAAW;EAAEgB,SAAS;EAAEC;AAAW,CAAC,GAAGxB,UAAU,CAAC8B,OAAO;AACxE,OAAO,MAAMC,WAAW,GAAIvB,KAAK,IAAKA,KAAK,CAACwB,KAAK,CAAC7B,IAAI;AACtD,OAAO,MAAM8B,eAAe,GAAIzB,KAAK,IAAKA,KAAK,CAACwB,KAAK,CAAC5B,QAAQ;AAC9D,eAAeJ,UAAU,CAACkC,OAAO"},"metadata":{},"sourceType":"module"}