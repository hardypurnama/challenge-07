{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchCar } from \"./CariAPI\";\nexport const {\n  filterCar,\n  sortCar,\n  clearCar\n} = carSlice.actions;\nexport const selectCar = state => state.car.data;\nexport const selectInitCar = state => state.car.initData;\nexport default carSlice.reducer;\nexport const getCar = createAsyncThunk(\"car/fetchCar\", async () => {\n  const response = await fetchCar();\n  return response;\n});\nexport const carSlice = createSlice({\n  name: \"car\",\n  initialState: {\n    data: [],\n    initData: [],\n    status: \"idle\"\n  },\n  reducers: {\n    filterCar: (state, action) => {\n      const filters = action.payload;\n      console.log(filters);\n      state.data = state.initData.filter(el => {\n        return Object.keys(filters).every(filter => {\n          if (filter === \"availableAt\") {\n            const rentDate = new Date(filters[filter]);\n            const availableDate = new Date(el[filter]);\n            console.log(rentDate, availableDate);\n            return rentDate.getTime() >= availableDate.getTime();\n          }\n          if (filter === \"capacity\") {\n            return el[filter] >= filters[filter];\n          }\n          return filters[filter] === el[filter];\n        });\n      });\n    },\n    sortCar: (state, action) => {},\n    clearCar: state => {\n      state.data = [];\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getCar.pending, state => {\n      state.status = \"loading\";\n    }).addCase(getCar.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.initData = action.payload;\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchCar","filterCar","sortCar","clearCar","carSlice","actions","selectCar","state","car","data","selectInitCar","initData","reducer","getCar","response","name","initialState","status","reducers","action","filters","payload","console","log","filter","el","Object","keys","every","rentDate","Date","availableDate","getTime","extraReducers","builder","addCase","pending","fulfilled"],"sources":["E:/bjb/QA/2022/Pelatihan Univ/TW 3/Fullstack web/Chapter 7 Gold-start 24 Oktober 2022/Challenge/Challenge-07/src/pages/Cari/CariSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchCar } from \"./CariAPI\";\r\nexport const { filterCar, sortCar, clearCar } = carSlice.actions;\r\nexport const selectCar = (state) => state.car.data;\r\nexport const selectInitCar = (state) => state.car.initData;\r\nexport default carSlice.reducer;\r\nexport const getCar = createAsyncThunk(\"car/fetchCar\", async () => {\r\n  const response = await fetchCar();\r\n  return response;\r\n});\r\n\r\nexport const carSlice = createSlice({\r\n  name: \"car\",\r\n  initialState: {\r\n    data: [],\r\n    initData: [],\r\n    status: \"idle\",\r\n  },\r\n  reducers: {\r\n    filterCar: (state, action) => {\r\n      const filters = action.payload;\r\n      console.log(filters);\r\n      state.data = state.initData.filter((el) => {\r\n        return Object.keys(filters).every((filter) => {\r\n          if (filter === \"availableAt\") {\r\n            const rentDate = new Date(filters[filter]);\r\n            const availableDate = new Date(el[filter]);\r\n            console.log(rentDate, availableDate);\r\n            return rentDate.getTime() >= availableDate.getTime();\r\n          }\r\n          if (filter === \"capacity\") {\r\n            return el[filter] >= filters[filter];\r\n          }\r\n          return filters[filter] === el[filter];\r\n        });\r\n      });\r\n    },\r\n    sortCar: (state, action) => {},\r\n    clearCar: (state) => {\r\n      state.data = [];\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getCar.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(getCar.fulfilled, (state, action) => {\r\n        state.status = \"idle\";\r\n        state.initData = action.payload;\r\n      });\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,MAAM;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAS,CAAC,GAAGC,QAAQ,CAACC,OAAO;AAChE,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACC,IAAI;AAClD,OAAO,MAAMC,aAAa,GAAIH,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACG,QAAQ;AAC1D,eAAeP,QAAQ,CAACQ,OAAO;AAC/B,OAAO,MAAMC,MAAM,GAAGf,gBAAgB,CAAC,cAAc,EAAE,YAAY;EACjE,MAAMgB,QAAQ,GAAG,MAAMd,QAAQ,EAAE;EACjC,OAAOc,QAAQ;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMV,QAAQ,GAAGL,WAAW,CAAC;EAClCgB,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZP,IAAI,EAAE,EAAE;IACRE,QAAQ,EAAE,EAAE;IACZM,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRjB,SAAS,EAAE,CAACM,KAAK,EAAEY,MAAM,KAAK;MAC5B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBb,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACI,QAAQ,CAACa,MAAM,CAAEC,EAAE,IAAK;QACzC,OAAOC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,KAAK,CAAEJ,MAAM,IAAK;UAC5C,IAAIA,MAAM,KAAK,aAAa,EAAE;YAC5B,MAAMK,QAAQ,GAAG,IAAIC,IAAI,CAACV,OAAO,CAACI,MAAM,CAAC,CAAC;YAC1C,MAAMO,aAAa,GAAG,IAAID,IAAI,CAACL,EAAE,CAACD,MAAM,CAAC,CAAC;YAC1CF,OAAO,CAACC,GAAG,CAACM,QAAQ,EAAEE,aAAa,CAAC;YACpC,OAAOF,QAAQ,CAACG,OAAO,EAAE,IAAID,aAAa,CAACC,OAAO,EAAE;UACtD;UACA,IAAIR,MAAM,KAAK,UAAU,EAAE;YACzB,OAAOC,EAAE,CAACD,MAAM,CAAC,IAAIJ,OAAO,CAACI,MAAM,CAAC;UACtC;UACA,OAAOJ,OAAO,CAACI,MAAM,CAAC,KAAKC,EAAE,CAACD,MAAM,CAAC;QACvC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACDtB,OAAO,EAAE,CAACK,KAAK,EAAEY,MAAM,KAAK,CAAC,CAAC;IAC9BhB,QAAQ,EAAGI,KAAK,IAAK;MACnBA,KAAK,CAACE,IAAI,GAAG,EAAE;IACjB;EACF,CAAC;EACDwB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACtB,MAAM,CAACuB,OAAO,EAAG7B,KAAK,IAAK;MAClCA,KAAK,CAACU,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDkB,OAAO,CAACtB,MAAM,CAACwB,SAAS,EAAE,CAAC9B,KAAK,EAAEY,MAAM,KAAK;MAC5CZ,KAAK,CAACU,MAAM,GAAG,MAAM;MACrBV,KAAK,CAACI,QAAQ,GAAGQ,MAAM,CAACE,OAAO;IACjC,CAAC,CAAC;EACN;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}